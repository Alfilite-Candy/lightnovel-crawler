name: Run Crawler

on:
  workflow_dispatch:
    inputs:
      urls:
        description: '输入小说目录页网址(多个网址请用空格分隔)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  crawl:
    runs-on: windows-latest
    env:
      PYTHONIOENCODING: utf8
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~\AppData\Local\pip\Cache
          ~\.cache\selenium
        key: ${{ runner.os }}-dependencies-${{ hashFiles('src/clawler.py') }}
        restore-keys: |
          ${{ runner.os }}-dependencies-

    - name: Setup Edge
      uses: browser-actions/setup-edge@latest
      with:
        edge-version: stable

    - name: Cache Edge WebDriver
      id: cache-webdriver
      uses: actions/cache@v4
      with:
        path: msedgedriver.exe
        key: ${{ runner.os }}-msedgedriver-${{ hashFiles('msedgedriver.exe') }}

    - name: Download Edge WebDriver
      if: steps.cache-webdriver.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        $edgeVersion = (Get-Item "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe").VersionInfo.ProductVersion
        $majorVersion = $edgeVersion.Split(".")[0]
        Write-Host "Edge version: $edgeVersion (Major: $majorVersion)"
        
        # 创建存放驱动的目录
        $driverDir = "$env:GITHUB_WORKSPACE\webdriver"
        mkdir -Force $driverDir
        
        # 使用更简单的方式下载WebDriver
        try {
          $downloadUrl = "https://msedgedriver.azureedge.net/$edgeVersion/edgedriver_win64.zip"
          Write-Host "Downloading WebDriver from: $downloadUrl"
          Invoke-WebRequest -Uri $downloadUrl -OutFile "$driverDir\msedgedriver.zip" -ErrorAction Stop
          Write-Host "Downloaded successfully"
        } catch {
          Write-Host "Failed to download specific version, trying alternative method"
          choco install selenium-chromium-edge-driver -y
          Write-Host "WebDriver installed using Chocolatey"
        }
        
        # 如果下载了zip文件，解压并安装
        if (Test-Path "$driverDir\msedgedriver.zip") {
          Expand-Archive -Path "$driverDir\msedgedriver.zip" -DestinationPath $driverDir -Force
          Copy-Item -Path "$driverDir\msedgedriver.exe" -Destination "$env:GITHUB_WORKSPACE\msedgedriver.exe" -Force
          Write-Host "Edge WebDriver installed to: $env:GITHUB_WORKSPACE\msedgedriver.exe"
        }
        
        # Add the directory to PATH
        echo "$env:GITHUB_WORKSPACE" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Create requirements.txt
      run: |
        @"
        selenium==4.29.0
        requests==2.32.3
        "@ | Out-File -FilePath "$env:GITHUB_WORKSPACE\requirements.txt" -Encoding utf8
      shell: pwsh
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --no-cache-dir
    
    - name: Run crawler
      run: |
        $urls = "${{ github.event.inputs.urls }}".Split(' ') | ForEach-Object { $_.Trim() }
        foreach ($url in $urls) {
          echo $url | python src/clawler.py
        }
      shell: pwsh
    
    - name: Upload novels
      uses: actions/upload-artifact@v4
      with:
        name: novels
        path: 'novel/*.txt'
        
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add novel/*.txt
        git commit -m "Add new novels" || echo "No changes to commit"
        git push
