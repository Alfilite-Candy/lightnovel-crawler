name: Run Crawler

on:
  workflow_dispatch:
    inputs:
      urls:
        description: '输入小说目录页网址(多个网址请用空格分隔)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  crawl:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('src/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-


    - name: Setup Edge
      uses: browser-actions/setup-edge@v2
      with:
        edge-version: '133.0.3065.59'  # 设置为你指定的目标版本
        edge-platform: 'win64'        # 明确指定 Windows 平台

    - name: Download Edge WebDriver
      shell: powershell
      run: |
        $edgeVersion = '133.0.3065.59'
        Write-Host "Edge version: $edgeVersion"
          
        # 创建存放驱动的目录
        $driverDir = "$env:GITHUB_WORKSPACE\webdriver"
        mkdir -Force $driverDir
          
          # 下载指定版本的 WebDriver
        $url = "https://msedgedriver.azureedge.net/133.0.3065.59/edgedriver_win64.zip"
        Write-Host "Trying to download from: $url"
        Invoke-WebRequest -Uri $url -OutFile "$driverDir\msedgedriver.zip" -ErrorAction Stop
        Write-Host "Downloaded successfully from: $url"
          
          # 解压并安装
        Expand-Archive -Path "$driverDir\msedgedriver.zip" -DestinationPath $driverDir -Force
        Copy-Item -Path "$driverDir\msedgedriver.exe" -Destination "$env:GITHUB_WORKSPACE\msedgedriver.exe" -Force
        Write-Host "Edge WebDriver installed to: $env:GITHUB_WORKSPACE\msedgedriver.exe"
          
          # Add the directory to PATH
        echo "$env:GITHUB_WORKSPACE" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium requests
    
    - name: Run crawler
      env:
        PYTHONIOENCODING: utf8
      run: |
        $urls = "${{ github.event.inputs.urls }}".Split(' ') | ForEach-Object { $_.Trim() }
        foreach ($url in $urls) {
          echo $url | python src/clawler.py
        }
      shell: pwsh
    
    - name: Upload novels
      uses: actions/upload-artifact@v4
      with:
        name: novels
        path: 'novel/*.txt'
        
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add novel/*.txt
        git commit -m "Add new novels" || echo "No changes to commit"
        git push
